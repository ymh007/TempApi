//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Seagull2.YuanXin.AppApi.NewsServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsServer.MossListOperationSoap")]
    public interface MossListOperationSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getNotificationsStringBySPSiteDataQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getNotificationsStringBySPSiteDataQuery(string siteUrl, string webUrl, string queryListsString, string ViewFieldsString, string queryString, string queryWebs, int rowLimit, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getNotificationsStringBySPSiteDataQuery", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getNotificationsStringBySPSiteDataQueryAsync(string siteUrl, string webUrl, string queryListsString, string ViewFieldsString, string queryString, string queryWebs, int rowLimit, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getNewsStringBySPSiteDataQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getNewsStringBySPSiteDataQuery(string siteUrl, string webUrl, string queryListsString, string ViewFieldsString, string queryString, string queryWebs, int rowLimit, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getNewsStringBySPSiteDataQuery", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getNewsStringBySPSiteDataQueryAsync(string siteUrl, string webUrl, string queryListsString, string ViewFieldsString, string queryString, string queryWebs, int rowLimit, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getWebByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getWebByID(string siteUrl, System.Guid webID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getWebByID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getWebByIDAsync(string siteUrl, System.Guid webID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListByListID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getListByListID(string siteUrl, System.Guid webID, System.Guid listID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListByListID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getListByListIDAsync(string siteUrl, System.Guid webID, System.Guid listID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListItemCollectionByQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getListItemCollectionByQuery(string siteUrl, System.Guid webID, System.Guid listID, string queryString, string ViewFieldsString, string ViewAttributesString, string userName, int rowLimit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListItemCollectionByQuery", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getListItemCollectionByQueryAsync(string siteUrl, System.Guid webID, System.Guid listID, string queryString, string ViewFieldsString, string ViewAttributesString, string userName, int rowLimit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListFieldsByListItemID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getListFieldsByListItemID(string siteUrl, System.Guid webID, System.Guid listID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListFieldsByListItemID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getListFieldsByListItemIDAsync(string siteUrl, System.Guid webID, System.Guid listID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListItemByListItemID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getListItemByListItemID(string siteUrl, System.Guid webID, System.Guid listID, string[] FieldName, int listItemID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListItemByListItemID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getListItemByListItemIDAsync(string siteUrl, System.Guid webID, System.Guid listID, string[] FieldName, int listItemID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListItemAttachmentsByListItemID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getListItemAttachmentsByListItemID(string siteUrl, System.Guid webID, System.Guid listID, int listItemID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListItemAttachmentsByListItemID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getListItemAttachmentsByListItemIDAsync(string siteUrl, System.Guid webID, System.Guid listID, int listItemID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListItemAgentByListItemID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getListItemAgentByListItemID(string siteUrl, System.Guid webID, System.Guid listID, int listItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getListItemAgentByListItemID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getListItemAgentByListItemIDAsync(string siteUrl, System.Guid webID, System.Guid listID, int listItemID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MossListOperationSoapChannel : Seagull2.YuanXin.AppApi.NewsServer.MossListOperationSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MossListOperationSoapClient : System.ServiceModel.ClientBase<Seagull2.YuanXin.AppApi.NewsServer.MossListOperationSoap>, Seagull2.YuanXin.AppApi.NewsServer.MossListOperationSoap {
        
        public MossListOperationSoapClient() {
        }
        
        public MossListOperationSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MossListOperationSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MossListOperationSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MossListOperationSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getNotificationsStringBySPSiteDataQuery(string siteUrl, string webUrl, string queryListsString, string ViewFieldsString, string queryString, string queryWebs, int rowLimit, string userName) {
            return base.Channel.getNotificationsStringBySPSiteDataQuery(siteUrl, webUrl, queryListsString, ViewFieldsString, queryString, queryWebs, rowLimit, userName);
        }
        
        public System.Threading.Tasks.Task<string> getNotificationsStringBySPSiteDataQueryAsync(string siteUrl, string webUrl, string queryListsString, string ViewFieldsString, string queryString, string queryWebs, int rowLimit, string userName) {
            return base.Channel.getNotificationsStringBySPSiteDataQueryAsync(siteUrl, webUrl, queryListsString, ViewFieldsString, queryString, queryWebs, rowLimit, userName);
        }
        
        public string getNewsStringBySPSiteDataQuery(string siteUrl, string webUrl, string queryListsString, string ViewFieldsString, string queryString, string queryWebs, int rowLimit, string userName) {
            return base.Channel.getNewsStringBySPSiteDataQuery(siteUrl, webUrl, queryListsString, ViewFieldsString, queryString, queryWebs, rowLimit, userName);
        }
        
        public System.Threading.Tasks.Task<string> getNewsStringBySPSiteDataQueryAsync(string siteUrl, string webUrl, string queryListsString, string ViewFieldsString, string queryString, string queryWebs, int rowLimit, string userName) {
            return base.Channel.getNewsStringBySPSiteDataQueryAsync(siteUrl, webUrl, queryListsString, ViewFieldsString, queryString, queryWebs, rowLimit, userName);
        }
        
        public string getWebByID(string siteUrl, System.Guid webID, string userName) {
            return base.Channel.getWebByID(siteUrl, webID, userName);
        }
        
        public System.Threading.Tasks.Task<string> getWebByIDAsync(string siteUrl, System.Guid webID, string userName) {
            return base.Channel.getWebByIDAsync(siteUrl, webID, userName);
        }
        
        public string getListByListID(string siteUrl, System.Guid webID, System.Guid listID, string userName) {
            return base.Channel.getListByListID(siteUrl, webID, listID, userName);
        }
        
        public System.Threading.Tasks.Task<string> getListByListIDAsync(string siteUrl, System.Guid webID, System.Guid listID, string userName) {
            return base.Channel.getListByListIDAsync(siteUrl, webID, listID, userName);
        }
        
        public string getListItemCollectionByQuery(string siteUrl, System.Guid webID, System.Guid listID, string queryString, string ViewFieldsString, string ViewAttributesString, string userName, int rowLimit) {
            return base.Channel.getListItemCollectionByQuery(siteUrl, webID, listID, queryString, ViewFieldsString, ViewAttributesString, userName, rowLimit);
        }
        
        public System.Threading.Tasks.Task<string> getListItemCollectionByQueryAsync(string siteUrl, System.Guid webID, System.Guid listID, string queryString, string ViewFieldsString, string ViewAttributesString, string userName, int rowLimit) {
            return base.Channel.getListItemCollectionByQueryAsync(siteUrl, webID, listID, queryString, ViewFieldsString, ViewAttributesString, userName, rowLimit);
        }
        
        public string getListFieldsByListItemID(string siteUrl, System.Guid webID, System.Guid listID, string userName) {
            return base.Channel.getListFieldsByListItemID(siteUrl, webID, listID, userName);
        }
        
        public System.Threading.Tasks.Task<string> getListFieldsByListItemIDAsync(string siteUrl, System.Guid webID, System.Guid listID, string userName) {
            return base.Channel.getListFieldsByListItemIDAsync(siteUrl, webID, listID, userName);
        }
        
        public string getListItemByListItemID(string siteUrl, System.Guid webID, System.Guid listID, string[] FieldName, int listItemID, string userName) {
            return base.Channel.getListItemByListItemID(siteUrl, webID, listID, FieldName, listItemID, userName);
        }
        
        public System.Threading.Tasks.Task<string> getListItemByListItemIDAsync(string siteUrl, System.Guid webID, System.Guid listID, string[] FieldName, int listItemID, string userName) {
            return base.Channel.getListItemByListItemIDAsync(siteUrl, webID, listID, FieldName, listItemID, userName);
        }
        
        public string getListItemAttachmentsByListItemID(string siteUrl, System.Guid webID, System.Guid listID, int listItemID, string userName) {
            return base.Channel.getListItemAttachmentsByListItemID(siteUrl, webID, listID, listItemID, userName);
        }
        
        public System.Threading.Tasks.Task<string> getListItemAttachmentsByListItemIDAsync(string siteUrl, System.Guid webID, System.Guid listID, int listItemID, string userName) {
            return base.Channel.getListItemAttachmentsByListItemIDAsync(siteUrl, webID, listID, listItemID, userName);
        }
        
        public string getListItemAgentByListItemID(string siteUrl, System.Guid webID, System.Guid listID, int listItemID) {
            return base.Channel.getListItemAgentByListItemID(siteUrl, webID, listID, listItemID);
        }
        
        public System.Threading.Tasks.Task<string> getListItemAgentByListItemIDAsync(string siteUrl, System.Guid webID, System.Guid listID, int listItemID) {
            return base.Channel.getListItemAgentByListItemIDAsync(siteUrl, webID, listID, listItemID);
        }
    }
}
